export {};
import { Core } from "../../Core";
declare class S2SServiceEventHandler {
    private _logger;
    private _eventEmitter;
    private _rest;
    private callbackAbsolutePath;
    private _contacts;
    private _bulles;
    private jid_im;
    private jid_password;
    private userId;
    private fullJid;
    private jid_tel;
    private jid;
    private xmppUtils;
    private _conversations;
    private shouldSendReadReceipt;
    constructor(_im: any, _application: any, _eventEmitter: any, _logger: any, _hostCallback: any);
    setAccount(account: any): void;
    handleS2SEvent(event: any): boolean | Promise<boolean>;
    ParseConnectionCallback(event: any): boolean;
    ParsePresenceCallback(event: any): Promise<boolean>;
    ParseChatStateCallback(content: any): Promise<boolean>;
    ParseReceiptCallback(content: any): Promise<boolean>;
    ParseAllReceiptCallback(content: any): boolean;
    ParseConversationCallback(content: any): Promise<boolean>;
    ParseMessageCallback(content: any): Promise<boolean>;
    ParseRoomInviteCallback(content: any): Promise<boolean>;
    ParseRoomMemberCallback(content: any): Promise<boolean>;
    ParseRoomStateCallback(content: any): Promise<boolean>;
    ParseAlldeletedCallback(content: any): Promise<boolean>;
    ParseErrorCallback(content: any): Promise<boolean>;
    start(_core: Core): Promise<unknown>;
}
export { S2SServiceEventHandler };
