export {};
import { XMPPService } from "./connection/XMPPService";
import { RESTService } from "./connection/RESTService";
import { HTTPService } from "./connection/HttpService";
import { IMService } from "./services/ImsService";
import { PresenceService } from "./services/PresenceService";
import { ChannelsService } from "./services/ChannelsService";
import { ContactsService } from "./services/ContactsService";
import { ConversationsService } from "./services/ConversationsService";
import { ProfilesService } from "./services/ProfilesService";
import { TelephonyService } from "./services/TelephonyService";
import { BubblesService } from "./services/BubblesService";
import { GroupsService } from "./services/GroupsService";
import { AdminService } from "./services/AdminService";
import { SettingsService } from "./services/SettingsService";
import { FileServerService } from "./services/FileServerService";
import { FileStorageService } from "./services/FileStorageService";
import { StateManager } from "./common/StateManager";
import { CallLogService } from "./services/CallLogService";
import { FavoritesService } from "./services/FavoritesService";
import { InvitationsService } from "./services/InvitationsService";
import { Events } from "./common/Events";
import { ProxyImpl } from "./ProxyImpl";
import { S2SService } from "./services/S2SService";
declare class Core {
    _signin: any;
    _retrieveInformation: any;
    onTokenRenewed: any;
    logger: any;
    _rest: RESTService;
    onTokenExpired: any;
    _eventEmitter: Events;
    _tokenSurvey: any;
    options: any;
    _proxy: ProxyImpl;
    _http: HTTPService;
    _xmpp: XMPPService;
    _stateManager: StateManager;
    _im: IMService;
    _presence: PresenceService;
    _channels: ChannelsService;
    _contacts: ContactsService;
    _conversations: ConversationsService;
    _profiles: ProfilesService;
    _telephony: TelephonyService;
    _bubbles: BubblesService;
    _groups: GroupsService;
    _admin: AdminService;
    _settings: SettingsService;
    _fileServer: FileServerService;
    _fileStorage: FileStorageService;
    _calllog: CallLogService;
    _favorites: FavoritesService;
    _invitations: InvitationsService;
    _botsjid: any;
    _s2s: S2SService;
    constructor(options: any);
    start(token: any): Promise<unknown>;
    signin(forceStopXMPP: any, token: any): Promise<unknown>;
    stop(): Promise<unknown>;
    get settings(): SettingsService;
    get presence(): PresenceService;
    get profiles(): ProfilesService;
    get im(): IMService;
    get invitations(): InvitationsService;
    get contacts(): ContactsService;
    get conversations(): ConversationsService;
    get channels(): ChannelsService;
    get bubbles(): BubblesService;
    get groups(): GroupsService;
    get admin(): AdminService;
    get fileServer(): FileServerService;
    get fileStorage(): FileStorageService;
    get events(): Events;
    get rest(): RESTService;
    get state(): any;
    get version(): any;
    get telephony(): TelephonyService;
    get calllog(): CallLogService;
}
export { Core };
