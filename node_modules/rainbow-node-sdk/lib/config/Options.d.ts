export {};
import { DataStoreType } from "./config";
declare class Options {
    _logger: any;
    _options: any;
    _hasCredentials: any;
    _hasApplication: any;
    _httpOptions: any;
    _xmppOptions: any;
    _s2sOptions: any;
    _proxyoptions: any;
    _imOptions: any;
    _applicationOptions: any;
    _withXMPP: any;
    _withS2S: any;
    _CLIMode: any;
    _servicesToStart: any;
    private _testOutdatedVersion;
    constructor(_options: any, _logger: any);
    parse(): void;
    get testOutdatedVersion(): boolean;
    set testOutdatedVersion(value: boolean);
    get servicesToStart(): any;
    get httpOptions(): any;
    get xmppOptions(): any;
    get s2sOptions(): any;
    get proxyOptions(): any;
    get imOptions(): any;
    get applicationOptions(): any;
    get hasCredentials(): any;
    get hasApplication(): any;
    get useXMPP(): any;
    get useS2S(): any;
    get useCLIMode(): any;
    get credentials(): any;
    _gettestOutdatedVersion(): any;
    _getservicesToStart(): {};
    _isOfficialRainbow(): boolean;
    _getHTTPOptions(): {
        host: string;
        port: string;
        protocol: string;
    };
    _getXMPPOptions(): {
        host: string;
        port: string;
        protocol: string;
        timeBetweenXmppRequests: string;
    };
    _getS2SOptions(): {
        hostCallback: string;
        locallistenningport: string;
    };
    _getModeOption(): string;
    _getProxyOptions(): {
        protocol: string;
        host: string;
        port: number;
        user: any;
        password: any;
        secureProtocol: any;
    };
    _getIMOptions(): {
        sendReadReceipt: boolean;
        messageMaxLength: number;
        sendMessageToConnectedUser: boolean;
        conversationsRetrievedFormat: string;
        storeMessages: boolean;
        copyMessage: boolean;
        nbMaxConversations: number;
        rateLimitPerHour: number;
        messagesDataStore: DataStoreType;
    };
    _getApplicationsOptions(): {
        appID: string;
        appSecret: string;
    };
}
export { Options };
