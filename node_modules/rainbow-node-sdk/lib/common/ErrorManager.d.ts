declare const code: {
    OK: number;
    ERROR: number;
    ERRORUNAUTHORIZED: number;
    ERRORXMPP: number;
    ERRORXMPPJID: number;
    ERRORBADREQUEST: number;
    ERRORUNSUPPORTED: number;
    ERRORNOTFOUND: number;
    ERRORFORBIDDEN: number;
    OTHERERROR: number;
};
/**
 * @module
 * @name ErrorManager
 */
declare class ErrorManager {
    private static xmppUtils;
    constructor();
    static getErrorManager(): ErrorManager;
    /**
     * @readonly
     * @memberof ErrorManager
     * @return {Err}
     */
    get BAD_REQUEST(): any;
    /**
     * @readonly
     * @memberof ErrorManager
     * @return {Err}
     */
    get FORBIDDEN(): {
        code: number;
        label: string;
        msg: string;
    };
    /**
     * @readonly
     * @memberof ErrorManager
     * @return {Err}
     */
    get OK(): {
        code: number;
        label: string;
        msg: string;
    };
    /**
     * @readonly
     * @memberof ErrorManager
     * @return {Err}
     */
    get XMPP(): {
        code: number;
        label: string;
        msg: string;
    };
    /**
     * @readonly
     * @memberof ErrorManager
     * @return {Err}
     */
    get ERROR(): {
        code: number;
        label: string;
        msg: string;
        details: string;
    };
    /**
     * @readonly
     * @memberof ErrorManager
     * @return {Err}
     */
    get UNAUTHORIZED(): {
        code: number;
        label: string;
        msg: string;
        details: string;
    };
    OTHERERROR(_label: any, _msg: any): {
        code: number;
        label: any;
        msg: any;
    };
    CUSTOMERROR(codeERROR: any, label: any, msg: any): {
        code: any;
        label: any;
        msg: any;
    };
}
export { ErrorManager, code };
