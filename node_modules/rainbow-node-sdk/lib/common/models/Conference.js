"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Conference = void 0;
/**
 * @class
 * @private
 * @name Conference
 * @description
 *      This class is used to represent a conference
 */
class Conference {
    /**
     * @this Conference
     */
    constructor(companyId, // (String) Company unique identifier
    id, // (String) unique identifier of conference
    mediaType, // (String) mediaType of conference ("pstnAudio", "webrtc", "webrtcSharingOnly")
    name, // (String) name of conference
    passCodes, // (Array) list of passcodes
    scheduled, // (Boolean) true if it is a scheduled meeting, false otherwise
    lastUpdateDate, // (String) last update date of conference (e.g. 2018-06-20T09:08:00.000Z)
    userId, // (String) user unique identifier
    confDialOutDisabled, // (Boolean) true if dialOut from PGi is disabled
    playEntryTone, // (Boolean) A tone is played when participant enters the conference.
    muteUponEntry // (Boolean) When participant enters the conference, he is automatically muted.
    ) {
        /**
         * @public
         * @property {string} companyId
         * @readonly
         */
        this._companyId = companyId;
        /**
         * @public
         * @property {string} id confEndpoint unique identifier
         * @readonly
         */
        this._id = id;
        /**
         * @public
         * @property {string} mediaType
         * @readonly
         */
        this._mediaType = mediaType;
        /**
         * @public
         * @property {string} name
         * @readonly
         */
        this._name = name;
        /**
         * @public
         * @property {Array} passCodes
         * @readonly
         */
        this._passCodes = passCodes ? passCodes : [];
        /**
         * @public
         * @property {boolean} scheduled
         * @readonly
         */
        this._scheduled = scheduled;
        /**
         * @public
         * @property {string} lastUpdateDate
         */
        this._lastUpdateDate = lastUpdateDate;
        /**
         * @public
         * @property {string} userId
         * @readonly
         */
        this._userId = userId;
        /**
         * @public
         * @property {string} confDialOutDisabled
         * @readonly
         */
        this._confDialOutDisabled = confDialOutDisabled;
        /**
         * @public
         * @property {boolean} playEntryTone
         * @readonly
         */
        this._playEntryTone = playEntryTone;
        /**
         * @public
         * @property {boolean} scheduled
         * @readonly
         */
        this._muteUponEntry = muteUponEntry;
    }
    static createFromData(data) {
        return new Conference(data.companyId, data.id, data.mediaType, data.name, data.passCodes, data.scheduled, data.lastUpdateDate, data.userId, data.confDialOutDisabled, data.playEntryTone, data.muteUponEntry);
    }
    ;
    /**
     * @private
     * @property {string} updateFromData Allow to update an existing conference with data from server
     * @readonly
     */
    updateFromData(data) {
        this._companyId = data.companyId;
        this._id = data.id;
        this._mediaType = data.mediaType;
        this._name = data.name;
        this._passCodes = data.passCodes;
        this._scheduled = data.scheduled;
        this._lastUpdateDate = data.lastUpdateDate;
        this._userId = data.userId;
        this._confDialOutDisabled = data.confDialOutDisabled;
        this._playEntryTone = data.playEntryTone;
        this._muteUponEntry = data.muteUponEntry;
    }
    ;
    get companyId() {
        return this._companyId;
    }
    set companyId(value) {
        this._companyId = value;
    }
    get id() {
        return this._id;
    }
    set id(value) {
        this._id = value;
    }
    get mediaType() {
        return this._mediaType;
    }
    set mediaType(value) {
        this._mediaType = value;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get passCodes() {
        return this._passCodes;
    }
    set passCodes(value) {
        this._passCodes = value;
    }
    get scheduled() {
        return this._scheduled;
    }
    set scheduled(value) {
        this._scheduled = value;
    }
    get lastUpdateDate() {
        return this._lastUpdateDate;
    }
    set lastUpdateDate(value) {
        this._lastUpdateDate = value;
    }
    get confDialOutDisabled() {
        return this._confDialOutDisabled;
    }
    set confDialOutDisabled(value) {
        this._confDialOutDisabled = value;
    }
    get playEntryTone() {
        return this._playEntryTone;
    }
    set playEntryTone(value) {
        this._playEntryTone = value;
    }
    get userId() {
        return this._userId;
    }
    set userId(value) {
        this._userId = value;
    }
    get muteUponEntry() {
        return this._muteUponEntry;
    }
    set muteUponEntry(value) {
        this._muteUponEntry = value;
    }
}
exports.Conference = Conference;
module.exports.Conference = Conference;
//# sourceMappingURL=Conference.js.map