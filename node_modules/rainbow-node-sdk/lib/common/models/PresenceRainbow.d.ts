/**
 * @public
 * @enum {number}
 * @name PresenceLevel
 * @description
 *   Enum with all presence levels possible
 * @readonly
 */
declare enum PresenceLevel {
    /**
     * @public
     * @readonly
     * @property {string} Offline/Invisible The presence of the contact is not connected
     * @instance
     */
    Offline = "offline",
    Invisible = "invisible",
    /**
     * @public
     * @readonly
     * @property {string} Online The presence of the contact is connected
     * @instance
     */
    Online = "online",
    /**
     * @public
     * @readonly
     * @property {string} Away The presence of the contact is connected but away from a long time
     * @instance
     */
    Away = "away",
    /**
     * @public
     * @readonly
     * @property {string} Dnd The presence of the contact is in "Do not disturb" state
     * @instance
     */
    Dnd = "dnd",
    /**
     * @public
     * @readonly
     * @property {string} Busy The presence of the contact is in "Busy" state
     * @instance
     */
    Busy = "busy",
    /**
     * @public
     * @readonly
     * @property {string} Xa The presence of the contact appear offline but to stay still connected.
     * @instance
     */
    Xa = "xa",
    /**
     * @public
     * @readonly
     * @property {string} Unknown The presence of the contact is not known
     * @instance
     */
    Unknown = "Unknown",
    Chat = "chat",
    EmptyString = ""
}
declare enum PresenceStatus {
    /**
     * @public
     * @readonly
     * @property {string} Online The presence of the contact is connected
     * @instance
     */
    Online = "online",
    /**
     * @public
     * @readonly
     * @property {string} ModeAuto The presence of the contact is connected
     * @instance
     */
    ModeAuto = "mode=auto",
    /**
     * @public
     * @readonly
     * @property {string} Away The contact is connected but away from a long time
     * @instance
     */
    Away = "away",
    /**
     * @public
     * @readonly
     * @property {string} Phone The contact is on phone
     * @instance
     */
    Phone = "phone",
    /**
     * @public
     * @readonly
     * @property {string} Presentation The contact is on presentation
     * @instance
     */
    Presentation = "presentation",
    /**
     * @public
     * @readonly
     * @property {string} Mobile The contact is on mobile phone
     * @instance
     */
    Mobile = "mobile",
    /**
     * @public
     * @readonly
     * @property {string} EmptyString The status is empty string.
     * @instance
     */
    EmptyString = ""
}
declare enum PresenceDetails {
    Inactive = "inactive",
    Audio = "audio",
    Video = "video",
    Sharing = "sharing",
    Presentation = "presentation",
    Busy = "busy",
    OutOfOffice = "out_of_office",
    Free = "free",
    EmptyString = ""
}
declare enum PresencePhone {
    EVT_CONNECTION_CLEARED = "EVT_CONNECTION_CLEARED",
    EVT_SERVICE_INITIATED = "EVT_SERVICE_INITIATED",
    EVT_ESTABLISHED = "EVT_ESTABLISHED",
    NOT_AVAILABLE = "NOT_AVAILABLE"
}
declare class PresenceInfo {
    get presenceShow(): string;
    set presenceShow(value: string);
    private _presenceLevel;
    private _presenceDetails;
    private _presenceShow;
    private _presenceStatus;
    constructor(presenceLevel?: PresenceLevel, presenceDetails?: PresenceDetails);
    get presenceLevel(): PresenceLevel | string;
    set presenceLevel(value: PresenceLevel | string);
    get presenceDetails(): PresenceDetails;
    set presenceDetails(value: PresenceDetails);
    get presenceStatus(): string;
    set presenceStatus(value: string);
    toJsonForServer(): {
        show: string;
        status: string;
    };
}
declare class PresenceCalendar extends PresenceInfo {
    private _until;
    constructor(presenceLevel?: PresenceLevel, presenceStatus?: string, presenceDetails?: PresenceDetails, until?: Date);
    get until(): Date;
    set until(value: Date);
}
declare class PresenceRainbow extends PresenceInfo {
    private _resource;
    private _date;
    constructor(presenceLevel?: PresenceLevel, presenceStatus?: string, presenceDetails?: PresenceDetails, resource?: string, date?: Date);
    get resource(): string;
    set resource(value: string);
    get date(): Date;
    set date(value: Date);
}
export { PresenceCalendar, PresenceInfo, PresenceLevel, PresenceStatus, PresenceDetails, PresencePhone, PresenceRainbow };
