"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConferenceSession = void 0;
/// <summary>
/// Define a participant to a conference
///
/// The Id of the particpant is NOT AT ALL related to the Id of a <see cref="Contact"/>
///
/// The Jid_im of the participant can be compared to the Jid_im of a <see cref="Contact"/>
/// </summary>
class Participant {
    constructor() {
    }
    get id() {
        return this._id;
    }
    set id(value) {
        this._id = value;
    }
    get jid_im() {
        return this._jid_im;
    }
    set jid_im(value) {
        this._jid_im = value;
    }
    get phoneNumber() {
        return this._phoneNumber;
    }
    set phoneNumber(value) {
        this._phoneNumber = value;
    }
    get moderator() {
        return this._moderator;
    }
    set moderator(value) {
        this._moderator = value;
    }
    get muted() {
        return this._muted;
    }
    set muted(value) {
        this._muted = value;
    }
    get hold() {
        return this._hold;
    }
    set hold(value) {
        this._hold = value;
    }
    get connected() {
        return this._connected;
    }
    set connected(value) {
        this._connected = value;
    }
    /// <summary>
    /// Serialize this object to String
    /// </summary>
    /// <returns><see cref="String"/> as serialization result</returns>
    ToString() {
        let tab = "- ";
        let result = "";
        // let result = String.Format($"Id:[{Id}] {tab}Jid_im:[{Jid_im}] {tab}PhoneNumber:[{PhoneNumber}] {tab}Moderator:[{Moderator}] {tab}Muted:[{Muted}] {tab}Hold:[{Hold}] {tab}Connected:[{Connected}]");
        return result;
    }
}
/// <summary>
/// Define a publisher to a conference
///
/// The Id of the particpant is NOT AT ALL related to the Id of a <see cref="Contact"/>
///
/// The Jid_im of the participant can be compared to the Jid_im of a <see cref="Contact"/>
/// </summary>
class Publisher {
    constructor() {
    }
    get id() {
        return this._id;
    }
    set id(value) {
        this._id = value;
    }
    get jid_im() {
        return this._jid_im;
    }
    set jid_im(value) {
        this._jid_im = value;
    }
    get media() {
        return this._media;
    }
    set media(value) {
        this._media = value;
    }
    /// <summary>
    /// Serialize this object to String
    /// </summary>
    /// <returns><see cref="String"/> as serialization result</returns>
    ToString() {
        let tab = "- ";
        let result = "";
        // let result = String.Format($"Id:[{Id}] {tab}Jid_im:[{Jid_im}] {tab}MediaType:[{String.Join(", ", Media.ToArray())}]");
        return result;
    }
}
/// <summary>
/// To describe a Conference in progress in a Bubble
///
/// Id of the Conference is related to a Bubble using Bubble.ConfEndpoints.ConfEndpointId
/// </summary>
class ConferenceSession {
    constructor() {
    }
    get id() {
        return this._id;
    }
    set id(value) {
        this._id = value;
    }
    get active() {
        return this._active;
    }
    set active(value) {
        this._active = value;
    }
    get muted() {
        return this._muted;
    }
    set muted(value) {
        this._muted = value;
    }
    get locked() {
        return this._locked;
    }
    set locked(value) {
        this._locked = value;
    }
    get recordStarted() {
        return this._recordStarted;
    }
    set recordStarted(value) {
        this._recordStarted = value;
    }
    get mediaType() {
        return this._mediaType;
    }
    set mediaType(value) {
        this._mediaType = value;
    }
    get participants() {
        return this._participants;
    }
    set participants(value) {
        this._participants = value;
    }
    get publishers() {
        return this._publishers;
    }
    set publishers(value) {
        this._publishers = value;
    }
    get talkers() {
        return this._talkers;
    }
    set talkers(value) {
        this._talkers = value;
    }
    /// <summary>
    /// Serialize this object to String
    /// </summary>
    /// <returns><see cref="String"/> as serialization result</returns>
    ToString() {
        let that = this;
        let tab = "\r\n\t";
        let participantsStr = "";
        if (that._participants != null) {
            /*
                            foreach(Participant participant in Participants)
                            {
                                if (String.IsNullOrEmpty(participantsStr))
                                    participantsStr += String.Format($" [{participant.ToString()}]");
                                else
                                    participantsStr += String.Format($"{tab}\t[{participant.ToString()}] ");
                            }
            */
        }
        let publishersStr = "";
        if (that._publishers != null) {
            /* foreach (Publisher publisher in Publishers)
             {
                 if (String.IsNullOrEmpty(publishersStr))
                     publishersStr += String.Format($" [{publisher.ToString()}]");
                 else
                     publishersStr += String.Format($"{tab}\t[{publisher.ToString()}] ");
             }*/
        }
        let talkersStr = "";
        let result = "";
        /*
                    if (Talkers != null)
                        talkersStr = (Talkers.Count > 0) ? " [" + String.Join("], [", Talkers.ToArray()) + "] " : "";

                    let result = String.Format($"{tab}Id:[{Id}] {tab}Active:[{Active}] {tab}Muted:[{Muted}] {tab}Locked:[{Locked}] {tab}RecordStarted:[{RecordStarted}] {tab}MediaType:[{MediaType}]" +
                        $"  {tab}Participants:[{participantsStr}]" +
                        $"  {tab}Publishers:[{publishersStr}]" +
                        $"  {tab}Talkers:[{talkersStr}]" );
        */
        return result;
    }
}
exports.ConferenceSession = ConferenceSession;
module.exports.ConferenceSession = ConferenceSession;
//# sourceMappingURL=ConferenceSession.js.map