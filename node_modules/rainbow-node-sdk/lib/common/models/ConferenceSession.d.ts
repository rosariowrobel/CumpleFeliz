import { List } from "ts-generic-collections-linq";
export {};
declare class Participant {
    private _id;
    private _jid_im;
    private _phoneNumber;
    private _moderator;
    private _muted;
    private _hold;
    private _connected;
    constructor();
    get id(): string;
    set id(value: string);
    get jid_im(): string;
    set jid_im(value: string);
    get phoneNumber(): string;
    set phoneNumber(value: string);
    get moderator(): boolean;
    set moderator(value: boolean);
    get muted(): boolean;
    set muted(value: boolean);
    get hold(): boolean;
    set hold(value: boolean);
    get connected(): boolean;
    set connected(value: boolean);
    ToString(): string;
}
declare class Publisher {
    private _id;
    private _jid_im;
    private _media;
    constructor();
    get id(): string;
    set id(value: string);
    get jid_im(): string;
    set jid_im(value: string);
    get media(): List<string>;
    set media(value: List<string>);
    ToString(): string;
}
declare class ConferenceSession {
    private _id;
    private _active;
    private _muted;
    private _locked;
    private _recordStarted;
    private _mediaType;
    private _participants;
    private _publishers;
    private _talkers;
    constructor();
    get id(): string;
    set id(value: string);
    get active(): boolean;
    set active(value: boolean);
    get muted(): boolean;
    set muted(value: boolean);
    get locked(): boolean;
    set locked(value: boolean);
    get recordStarted(): boolean;
    set recordStarted(value: boolean);
    get mediaType(): string;
    set mediaType(value: string);
    get participants(): List<Participant>;
    set participants(value: List<Participant>);
    get publishers(): List<Publisher>;
    set publishers(value: List<Publisher>);
    get talkers(): List<String>;
    set talkers(value: List<String>);
    ToString(): string;
}
export { ConferenceSession };
