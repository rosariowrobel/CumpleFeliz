{"version":3,"file":"ts-generic-collections-linq.js.map","sources":["ng://ts-generic-collections-linq/lib/list.ts","ng://ts-generic-collections-linq/lib/common.ts","ng://ts-generic-collections-linq/lib/dictionary.ts"],"sourcesContent":["import { IEnumerable, IComparer, IEqualityComparer } from './interfaces';\r\nimport { Group, objCompare, ITEM_NOT_FOUND_MSG, MULTIPLE_INSTANCES_FOUND_MSG } from './common';\r\n\r\nexport interface IList<T> extends IEnumerable<T> {\r\n    add(item: T) : void;\r\n    addRange(items: T[]) : void;\r\n    remove(predicate: (item:T) => boolean) : void;\r\n    clear() : void;    \r\n}\r\n\r\nexport class List<T> implements IList<T> {\r\n\r\n    private list: Array<T> = new Array<T>();    \r\n\r\n    constructor(array: Array<T> = null) {\r\n        if (array)\r\n            this.list = array;\r\n    }\r\n\r\n    /* IList */\r\n\r\n    add(item: T) : void {\r\n        this.list.push(item);\r\n    }\r\n\r\n    addRange(items: T[]) : void {\r\n        items.forEach(x => this.add(x));\r\n    }\r\n\r\n    remove(predicate: (item:T) => boolean) : void {\r\n        let temp = new Array<T>();\r\n\r\n        this.list.forEach(element => {\r\n            if (!predicate(element))\r\n            {\r\n                temp.push(element);\r\n            }\r\n        });\r\n\r\n        this.list = temp;\r\n    }\r\n\r\n    clear() : void {\r\n        this.list = new Array<T>();\r\n    }\r\n\r\n    /* IEnumerable */\r\n\r\n    asEnumerable() : IEnumerable<T> {\r\n        return this;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    elementAt(index: number) : T {\r\n        try {\r\n            return this.list[index];\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    any(predicate?: (item: T)=> boolean) : boolean {\r\n        if (!predicate) {\r\n            return this.list.length > 0;\r\n        }\r\n\r\n        for (let i=0; i<this.list.length; i++) {\r\n            if (predicate(this.list[i]))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    all(predicate?: (item: T)=> boolean) : boolean {\r\n        if (!predicate) {\r\n            return this.list.length > 0;\r\n        }\r\n        \r\n        for (let i=0; i<this.list.length; i++) {\r\n            if (!predicate(this.list[i]))\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    single(predicate: (item: T)=> boolean = null) : T {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.singleOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n        \r\n        return this.list[0];\r\n    }\r\n\r\n    first(predicate: (item: T)=> boolean = null) : T {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.firstOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n        \r\n        return this.list[0];\r\n    }\r\n    \r\n    last(predicate: (item: T)=> boolean = null) : T {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.lastOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n\r\n        return this.list[this.list.length - 1];\r\n    }    \r\n\r\n    singleOrDefault(predicate: (item: T)=> boolean) : T {\r\n        let temp = new Array<T>();\r\n\r\n        this.list.filter(element => {\r\n            if (predicate(element))\r\n            {\r\n                temp.push(element);\r\n            }\r\n        });\r\n\r\n        if (temp.length > 1) {\r\n            throw MULTIPLE_INSTANCES_FOUND_MSG;\r\n        }\r\n\r\n        if (temp.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        return temp[0];\r\n    }    \r\n\r\n    firstOrDefault(predicate: (item: T)=> boolean) : T {\r\n        for (let i=0; i<this.length; i++) {\r\n            let item = this.list[i];\r\n            if (predicate(item))\r\n            {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    lastOrDefault(predicate: (item: T)=> boolean) : T {\r\n        for (let i=this.length; i>=0; i--) {\r\n            let item = this.list[i - 1];\r\n            if (predicate(item))\r\n            {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }    \r\n\r\n    where(predicate: (item: T)=> boolean) : IEnumerable<T> {\r\n        let temp = new List<T>();\r\n\r\n        this.list.filter(element => {\r\n            if (predicate(element))\r\n            {\r\n                temp.add(element);\r\n            }\r\n        });\r\n\r\n        return temp;\r\n    }\r\n\r\n    select<TResult>(predicate: (item: T)=> TResult) : IEnumerable<TResult> {\r\n        let temp = new List<TResult>();\r\n\r\n        this.forEach(x => temp.add(predicate(x)));\r\n\r\n        return temp;\r\n    }\r\n\r\n    forEach(predicate: (item: T)=> void) : void {\r\n        this.list.forEach(x => predicate(x));\r\n    }\r\n\r\n    toArray() : Array<T> {\r\n        return this.list;\r\n    }\r\n\r\n    join<TOuter, TMatch, TResult>(outer: IEnumerable<TOuter>, conditionInner: (item: T)=> TMatch, \r\n                                    conditionOuter: (item: TOuter)=> TMatch, select: (x: T, y:TOuter)=> TResult, leftJoin: boolean = false) : IEnumerable<TResult> {\r\n        let resultList = new List<TResult>();\r\n\r\n        this.list.forEach(x => {\r\n            let outerEntries = outer.toArray().filter(y => conditionInner(x) === conditionOuter(y));\r\n\r\n            if (leftJoin && outerEntries && outerEntries.length <= 0) {\r\n                resultList.add(select(x, null));\r\n            }\r\n            else {\r\n                outerEntries.forEach(z => resultList.add(select(x, z)));\r\n            }\r\n        })\r\n\r\n        return resultList;\r\n    }\r\n\r\n    groupBy(predicate: (item: T) => Array<any>) : IEnumerable<Group<T>> {\r\n        let groups = {};\r\n        this.list.forEach(function (o) {\r\n          var group = JSON.stringify(predicate(o));\r\n          groups[group] = groups[group] || [];\r\n          groups[group].push(o);\r\n        });\r\n        let g = Object.keys(groups).map(function (group) {                \r\n            let a = group.substr(1, group.length - 2);\r\n\r\n            let grp= new Group<T>(a.split(','), groups[group]);\r\n\r\n            return grp;\r\n        });\r\n\r\n        return new List<Group<T>>(g);        \r\n    }\r\n\r\n    orderBy(comparer: IComparer<T>) : IEnumerable<T> {\r\n        let temp = this.list.sort((x,y) => comparer.compare(x, y));\r\n\r\n        return new List<T>(temp);\r\n    }\r\n\r\n    union(list: IEnumerable<T>) : IEnumerable<T> {\r\n        this.addRange(list.toArray());\r\n\r\n         return this;\r\n    }\r\n\r\n    distinct(comparer: IEqualityComparer<T>) : IEnumerable<T> {\r\n        let uniques = new List<T>();\r\n        this.forEach(x => {\r\n            uniques.forEach(y => {\r\n                if (!comparer.equals(x, y)) {\r\n                    uniques.add(x);\r\n                }\r\n            });\r\n        });\r\n\r\n        return uniques;\r\n    }\r\n\r\n    skip(no: number) : IEnumerable<T> {\r\n        if (no > 0) {\r\n            return new List(this.list.slice(no, this.list.length - 1));\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    take(no: number) : IEnumerable<T> {\r\n        if (no > 0) {\r\n            return new List(this.list.slice(0, no));\r\n        }        \r\n\r\n        return this;\r\n    }\r\n\r\n    sum(predicate: (item: T)=> number) : number {\r\n        let sum: number = 0;\r\n        this.list.forEach(x => sum = sum + predicate(x));\r\n\r\n        return sum;\r\n    }\r\n\r\n    avg(predicate: (item: T)=> number) : number {        \r\n        return this.sum(predicate) / this.length;\r\n    }\r\n\r\n    min(predicate: (item: T)=> number) : number {\r\n        let min: number = 0;\r\n        let i = 0;\r\n        this.list.forEach(x => \r\n        {\r\n            if (i == 0) {\r\n                min = predicate(x);\r\n            }\r\n            else {\r\n                let val = predicate(x);\r\n                if (val < min) {\r\n                    min = val;\r\n                }\r\n            }            \r\n            i++;\r\n        });\r\n\r\n        return min;\r\n    }\r\n    \r\n    max(predicate: (item: T)=> number) : number {\r\n        let max: number = 0;\r\n        let i = 0;\r\n        this.list.forEach(x => \r\n        {\r\n            if (i == 0) {\r\n                max = predicate(x);\r\n            }\r\n            else {\r\n                let val = predicate(x);\r\n                if (val > max) {\r\n                    max = val;\r\n                }\r\n            }            \r\n            i++;\r\n        });\r\n\r\n        return max;\r\n    }    \r\n    \r\n    count(predicate: (item: T)=> boolean = null) : number {\r\n        if (!predicate) {\r\n            return this.length;\r\n        }\r\n\r\n        let count: number = 0;\r\n        this.list.forEach(x => {\r\n            if(predicate(x)) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n}","import { IEnumerable, IGroup } from './interfaces';\r\nimport { List } from './list';\r\n\r\nexport class Group<T> implements IGroup<T> {\r\n    groups: any[];\r\n    list: IEnumerable<T> = new List<T>();\r\n\r\n    constructor(groups: any[], list: Array<T>) {\r\n        this.groups = groups;\r\n        this.list = new List<T>(list);\r\n    }\r\n}\r\n\r\nexport var objCompare = function (obj1, obj2) {\r\n\t//Loop through properties in object 1\r\n\tfor (var p in obj1) {\r\n\t\t//Check property exists on both objects\r\n\t\tif (obj1.hasOwnProperty(p) !== obj2.hasOwnProperty(p)) return false;\r\n \r\n\t\tswitch (typeof (obj1[p])) {\r\n\t\t\t//Deep compare objects\r\n\t\t\tcase 'object':\r\n\t\t\t\tif (!objCompare(obj1[p], obj2[p])) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t//Compare function code\r\n\t\t\tcase 'function':\r\n\t\t\t\tif (typeof (obj2[p]) == 'undefined' || (p != 'compare' && obj1[p].toString() != obj2[p].toString())) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t//Compare values\r\n\t\t\tdefault:\r\n\t\t\t\tif (obj1[p] != obj2[p]) return false;\r\n\t\t}\r\n\t}\r\n \r\n\t//Check object 2 for any extra properties\r\n\tfor (var p in obj2) {\r\n\t\tif (typeof (obj1[p]) == 'undefined') return false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nexport const ITEM_NOT_FOUND_MSG: string = \"Item does not exist.\";\r\nexport const MULTIPLE_INSTANCES_FOUND_MSG: string = \"Multiple instances of entity found.\";","import { IEnumerable, IComparer, IEqualityComparer } from './interfaces';\r\nimport { List } from './list';\r\nimport { Group, objCompare, ITEM_NOT_FOUND_MSG, MULTIPLE_INSTANCES_FOUND_MSG } from './common';\r\n\r\nexport interface IDictionary<TKey, TValue> extends IEnumerable<KeyValuePair<TKey, TValue>> {\r\n    add(key: TKey, value: TValue) : void;\r\n    addRange(items: KeyValuePair<TKey, TValue>[]) : void;\r\n    remove(predicate: (item:KeyValuePair<TKey, TValue>) => boolean) : void;\r\n    clear() : void;\r\n\r\n    containsKey(key: TKey) : boolean;\r\n    containsValue(value: TValue) : boolean;\r\n    tryGetValue(key: TKey) : TValue;\r\n}\r\n\r\nexport class Dictionary<TKey, TValue> implements IDictionary<TKey, TValue>\r\n{\r\n    private list: Array<KeyValuePair<TKey, TValue>> = new Array<KeyValuePair<TKey, TValue>>();\r\n\r\n    constructor(list: Array<KeyValuePair<TKey, TValue>> = null) {\r\n        if (list) {\r\n            this.list = list;\r\n        }        \r\n    }\r\n\r\n    /* IList */\r\n\r\n    add(key: TKey, value: TValue) : void {\r\n        let pair = new KeyValuePair<TKey, TValue>(key, value);\r\n\r\n        if (this.containsKey(key)) {\r\n            throw \"Duplicate key. Cannot add.\"\r\n        }\r\n\r\n        this.list.push(pair);\r\n    }\r\n\r\n    addRange(items: KeyValuePair<TKey, TValue>[]) : void {\r\n        items.forEach(x => this.add(x.key, x.value));\r\n    }\r\n\r\n    clear() : void {\r\n        this.list = new Array<KeyValuePair<TKey, TValue>>();\r\n    }    \r\n\r\n    remove(predicate: (item:KeyValuePair<TKey, TValue>) => boolean) : void {\r\n        let temp = new Array<KeyValuePair<TKey, TValue>>();\r\n\r\n        this.list.forEach(element => {\r\n            if (!predicate(element))\r\n            {\r\n                temp.push(element);\r\n            }\r\n        });\r\n\r\n        this.list = temp;\r\n    }    \r\n\r\n    containsKey(key: TKey) : boolean {\r\n        return this.any(x => objCompare(x.key, key));\r\n    }\r\n\r\n    containsValue(value: TValue) : boolean {\r\n        return this.any(x => objCompare(x.value, value));\r\n    }\r\n\r\n    tryGetValue(key: TKey) : TValue {\r\n        let item = this.singleOrDefault(x => objCompare(x.key, key));\r\n\r\n        if (item) {\r\n            return item.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /* IEnumerable */\r\n\r\n    asEnumerable() : IEnumerable<KeyValuePair<TKey, TValue>> {\r\n        return this;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    elementAt(index: number) : KeyValuePair<TKey, TValue> {\r\n        try {\r\n            return this.list[index];\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }    \r\n\r\n    any(predicate?: (item: KeyValuePair<TKey, TValue>)=> boolean) : boolean {\r\n        if (!predicate) {\r\n            return this.list.length > 0;\r\n        }\r\n\r\n        for (let i=0; i<this.list.length; i++) {\r\n            if (predicate(this.list[i]))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    all(predicate?: (item: KeyValuePair<TKey, TValue>)=> boolean) : boolean {\r\n        if (!predicate) {\r\n            return this.list.length > 0;\r\n        }\r\n        \r\n        for (let i=0; i<this.list.length; i++) {\r\n            if (!predicate(this.list[i]))\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    single(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean = null) : KeyValuePair<TKey, TValue> {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.singleOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n        \r\n        return this.list[0];\r\n    }\r\n\r\n    first(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean = null) : KeyValuePair<TKey, TValue> {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.firstOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n        \r\n        return this.list[0];\r\n    }\r\n    \r\n    last(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : KeyValuePair<TKey, TValue> {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.lastOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n\r\n        return this.list[this.list.length - 1];\r\n    }    \r\n\r\n    singleOrDefault(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : KeyValuePair<TKey, TValue> {\r\n        let temp = new Array<KeyValuePair<TKey, TValue>>();\r\n\r\n        this.list.filter(element => {\r\n            if (predicate(element))\r\n            {\r\n                temp.push(element);\r\n            }\r\n        });\r\n\r\n        if (temp.length > 1) {\r\n            throw MULTIPLE_INSTANCES_FOUND_MSG;\r\n        }\r\n\r\n        if (temp.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        return temp[0];\r\n    }    \r\n\r\n    firstOrDefault(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : KeyValuePair<TKey, TValue> {        \r\n        for (let i=0; i<this.length; i++) {\r\n            let item = this.list[i];\r\n            if (predicate(item))\r\n            {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    lastOrDefault(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : KeyValuePair<TKey, TValue> {\r\n        for (let i=this.length; i>=0; i--) {\r\n            let item = this.list[i - 1];\r\n            if (predicate(item))\r\n            {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }    \r\n\r\n    where(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : IDictionary<TKey, TValue> {\r\n        let temp = new Dictionary<TKey, TValue>();\r\n\r\n        this.list.filter(element => {\r\n            if (predicate(element))\r\n            {\r\n                temp.add(element.key, element.value);\r\n            }\r\n        });\r\n\r\n        return temp;\r\n    }\r\n\r\n    select<TResult>(predicate: (item: KeyValuePair<TKey, TValue>)=> TResult) : IEnumerable<TResult> {\r\n        let temp = new List<TResult>();\r\n\r\n        this.forEach(x => temp.add(predicate(x)));\r\n\r\n        return temp;\r\n    }\r\n\r\n    forEach(predicate: (item: KeyValuePair<TKey, TValue>)=> void) : void {\r\n        this.list.forEach(x => predicate(x));\r\n    }\r\n\r\n    toArray() : Array<KeyValuePair<TKey, TValue>> {\r\n        return this.list;\r\n    }\r\n\r\n    join<TOuter, TMatch, TResult>(outer: IEnumerable<TOuter>, conditionInner: (item: KeyValuePair<TKey, TValue>)=> TMatch, \r\n                                    conditionOuter: (item: TOuter)=> TMatch, select: (x: KeyValuePair<TKey, TValue>, y:TOuter)=> TResult, leftJoin: boolean = false) : IEnumerable<TResult> {\r\n        let resultList = new List<TResult>();\r\n\r\n        this.list.forEach(x => {\r\n            let outerEntries = outer.toArray().filter(y => conditionInner(x) === conditionOuter(y));\r\n\r\n            if (leftJoin && outerEntries && outerEntries.length <= 0) {\r\n                resultList.add(select(x, null));\r\n            }\r\n            else {\r\n                outerEntries.forEach(z => resultList.add(select(x, z)));\r\n            }\r\n        })\r\n\r\n        return resultList;\r\n    }\r\n\r\n    groupBy(predicate: (item: KeyValuePair<TKey, TValue>) => Array<any>) : IEnumerable<Group<KeyValuePair<TKey, TValue>>> {\r\n        let groups = {};\r\n        this.list.forEach(function (o) {\r\n          var group = JSON.stringify(predicate(o));\r\n          groups[group] = groups[group] || [];\r\n          groups[group].push(o);\r\n        });\r\n        let g = Object.keys(groups).map(function (group) {                \r\n            let a = group.substr(1, group.length - 2);\r\n\r\n            let grp= new Group<KeyValuePair<TKey, TValue>>(a.split(','), groups[group]);\r\n\r\n            return grp;\r\n        });\r\n\r\n        return new List<Group<KeyValuePair<TKey, TValue>>>(g);        \r\n    }\r\n\r\n    orderBy(comparer: IComparer<KeyValuePair<TKey, TValue>>) : IEnumerable<KeyValuePair<TKey, TValue>> {\r\n        let temp = this.list.sort((x,y) => comparer.compare(x, y));\r\n\r\n        return new List<KeyValuePair<TKey, TValue>>(temp);\r\n    }\r\n\r\n    distinct(comparer: IEqualityComparer<KeyValuePair<TKey, TValue>>) : IEnumerable<KeyValuePair<TKey, TValue>> {\r\n        let uniques = new List<KeyValuePair<TKey, TValue>>();\r\n        this.forEach(x => {\r\n            uniques.forEach(y => {\r\n                if (!comparer.equals(x, y)) {\r\n                    uniques.add(x);\r\n                }\r\n            });\r\n        });\r\n\r\n        return uniques;\r\n    }\r\n\r\n    union(list: IEnumerable<KeyValuePair<TKey, TValue>>) : IDictionary<TKey, TValue> {\r\n         this.addRange(list.toArray());\r\n\r\n         return this;\r\n    }    \r\n\r\n    skip(no: number) : IDictionary<TKey, TValue> {\r\n        if (no > 0) {\r\n            return new Dictionary(this.list.slice(no, this.list.length - 1));\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    take(no: number) : IDictionary<TKey, TValue> {\r\n        if (no > 0) {\r\n            return new Dictionary(this.list.slice(0, no));\r\n        }        \r\n\r\n        return this;\r\n    }    \r\n\r\n    sum(predicate: (item: KeyValuePair<TKey, TValue>)=> number) : number {\r\n        let sum: number = 0;\r\n        this.list.forEach(x => sum = sum + predicate(x));\r\n\r\n        return sum;\r\n    }\r\n\r\n    avg(predicate: (item: KeyValuePair<TKey, TValue>)=> number) : number {        \r\n        return this.sum(predicate) / this.length;\r\n    }\r\n\r\n    min(predicate: (item: KeyValuePair<TKey, TValue>)=> number) : number {\r\n        let min: number = 0;\r\n        let i = 0;\r\n        this.list.forEach(x => \r\n        {\r\n            if (i == 0) {\r\n                min = predicate(x);\r\n            }\r\n            else {\r\n                let val = predicate(x);\r\n                if (val < min) {\r\n                    min = val;\r\n                }\r\n            }            \r\n            i++;\r\n        });\r\n\r\n        return min;\r\n    }\r\n    \r\n    max(predicate: (item: KeyValuePair<TKey, TValue>)=> number) : number {\r\n        let max: number = 0;\r\n        let i = 0;\r\n        this.list.forEach(x => \r\n        {\r\n            if (i == 0) {\r\n                max = predicate(x);\r\n            }\r\n            else {\r\n                let val = predicate(x);\r\n                if (val > max) {\r\n                    max = val;\r\n                }\r\n            }            \r\n            i++;\r\n        });\r\n\r\n        return max;\r\n    }\r\n\r\n    count(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean = null) : number {\r\n        if (!predicate) {\r\n            return this.length;\r\n        }\r\n\r\n        let count: number = 0;\r\n        this.list.forEach(x => {\r\n            if(predicate(x)) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }    \r\n}\r\n\r\nexport class KeyValuePair<TKey, TValue> {\r\n    key: TKey;\r\n    value: TValue;\r\n\r\n    constructor(key: TKey, value: TValue) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n}"],"names":[],"mappings":"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"}
