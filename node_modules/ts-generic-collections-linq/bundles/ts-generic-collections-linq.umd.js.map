{"version":3,"file":"ts-generic-collections-linq.umd.js.map","sources":["ng://ts-generic-collections-linq/lib/list.ts","ng://ts-generic-collections-linq/lib/common.ts","ng://ts-generic-collections-linq/lib/dictionary.ts"],"sourcesContent":["import { IEnumerable, IComparer, IEqualityComparer } from './interfaces';\r\nimport { Group, objCompare, ITEM_NOT_FOUND_MSG, MULTIPLE_INSTANCES_FOUND_MSG } from './common';\r\n\r\nexport interface IList<T> extends IEnumerable<T> {\r\n    add(item: T) : void;\r\n    addRange(items: T[]) : void;\r\n    remove(predicate: (item:T) => boolean) : void;\r\n    clear() : void;    \r\n}\r\n\r\nexport class List<T> implements IList<T> {\r\n\r\n    private list: Array<T> = new Array<T>();    \r\n\r\n    constructor(array: Array<T> = null) {\r\n        if (array)\r\n            this.list = array;\r\n    }\r\n\r\n    /* IList */\r\n\r\n    add(item: T) : void {\r\n        this.list.push(item);\r\n    }\r\n\r\n    addRange(items: T[]) : void {\r\n        items.forEach(x => this.add(x));\r\n    }\r\n\r\n    remove(predicate: (item:T) => boolean) : void {\r\n        let temp = new Array<T>();\r\n\r\n        this.list.forEach(element => {\r\n            if (!predicate(element))\r\n            {\r\n                temp.push(element);\r\n            }\r\n        });\r\n\r\n        this.list = temp;\r\n    }\r\n\r\n    clear() : void {\r\n        this.list = new Array<T>();\r\n    }\r\n\r\n    /* IEnumerable */\r\n\r\n    asEnumerable() : IEnumerable<T> {\r\n        return this;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    elementAt(index: number) : T {\r\n        try {\r\n            return this.list[index];\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    any(predicate?: (item: T)=> boolean) : boolean {\r\n        if (!predicate) {\r\n            return this.list.length > 0;\r\n        }\r\n\r\n        for (let i=0; i<this.list.length; i++) {\r\n            if (predicate(this.list[i]))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    all(predicate?: (item: T)=> boolean) : boolean {\r\n        if (!predicate) {\r\n            return this.list.length > 0;\r\n        }\r\n        \r\n        for (let i=0; i<this.list.length; i++) {\r\n            if (!predicate(this.list[i]))\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    single(predicate: (item: T)=> boolean = null) : T {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.singleOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n        \r\n        return this.list[0];\r\n    }\r\n\r\n    first(predicate: (item: T)=> boolean = null) : T {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.firstOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n        \r\n        return this.list[0];\r\n    }\r\n    \r\n    last(predicate: (item: T)=> boolean = null) : T {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.lastOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n\r\n        return this.list[this.list.length - 1];\r\n    }    \r\n\r\n    singleOrDefault(predicate: (item: T)=> boolean) : T {\r\n        let temp = new Array<T>();\r\n\r\n        this.list.filter(element => {\r\n            if (predicate(element))\r\n            {\r\n                temp.push(element);\r\n            }\r\n        });\r\n\r\n        if (temp.length > 1) {\r\n            throw MULTIPLE_INSTANCES_FOUND_MSG;\r\n        }\r\n\r\n        if (temp.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        return temp[0];\r\n    }    \r\n\r\n    firstOrDefault(predicate: (item: T)=> boolean) : T {\r\n        for (let i=0; i<this.length; i++) {\r\n            let item = this.list[i];\r\n            if (predicate(item))\r\n            {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    lastOrDefault(predicate: (item: T)=> boolean) : T {\r\n        for (let i=this.length; i>=0; i--) {\r\n            let item = this.list[i - 1];\r\n            if (predicate(item))\r\n            {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }    \r\n\r\n    where(predicate: (item: T)=> boolean) : IEnumerable<T> {\r\n        let temp = new List<T>();\r\n\r\n        this.list.filter(element => {\r\n            if (predicate(element))\r\n            {\r\n                temp.add(element);\r\n            }\r\n        });\r\n\r\n        return temp;\r\n    }\r\n\r\n    select<TResult>(predicate: (item: T)=> TResult) : IEnumerable<TResult> {\r\n        let temp = new List<TResult>();\r\n\r\n        this.forEach(x => temp.add(predicate(x)));\r\n\r\n        return temp;\r\n    }\r\n\r\n    forEach(predicate: (item: T)=> void) : void {\r\n        this.list.forEach(x => predicate(x));\r\n    }\r\n\r\n    toArray() : Array<T> {\r\n        return this.list;\r\n    }\r\n\r\n    join<TOuter, TMatch, TResult>(outer: IEnumerable<TOuter>, conditionInner: (item: T)=> TMatch, \r\n                                    conditionOuter: (item: TOuter)=> TMatch, select: (x: T, y:TOuter)=> TResult, leftJoin: boolean = false) : IEnumerable<TResult> {\r\n        let resultList = new List<TResult>();\r\n\r\n        this.list.forEach(x => {\r\n            let outerEntries = outer.toArray().filter(y => conditionInner(x) === conditionOuter(y));\r\n\r\n            if (leftJoin && outerEntries && outerEntries.length <= 0) {\r\n                resultList.add(select(x, null));\r\n            }\r\n            else {\r\n                outerEntries.forEach(z => resultList.add(select(x, z)));\r\n            }\r\n        })\r\n\r\n        return resultList;\r\n    }\r\n\r\n    groupBy(predicate: (item: T) => Array<any>) : IEnumerable<Group<T>> {\r\n        let groups = {};\r\n        this.list.forEach(function (o) {\r\n          var group = JSON.stringify(predicate(o));\r\n          groups[group] = groups[group] || [];\r\n          groups[group].push(o);\r\n        });\r\n        let g = Object.keys(groups).map(function (group) {                \r\n            let a = group.substr(1, group.length - 2);\r\n\r\n            let grp= new Group<T>(a.split(','), groups[group]);\r\n\r\n            return grp;\r\n        });\r\n\r\n        return new List<Group<T>>(g);        \r\n    }\r\n\r\n    orderBy(comparer: IComparer<T>) : IEnumerable<T> {\r\n        let temp = this.list.sort((x,y) => comparer.compare(x, y));\r\n\r\n        return new List<T>(temp);\r\n    }\r\n\r\n    union(list: IEnumerable<T>) : IEnumerable<T> {\r\n        this.addRange(list.toArray());\r\n\r\n         return this;\r\n    }\r\n\r\n    distinct(comparer: IEqualityComparer<T>) : IEnumerable<T> {\r\n        let uniques = new List<T>();\r\n        this.forEach(x => {\r\n            uniques.forEach(y => {\r\n                if (!comparer.equals(x, y)) {\r\n                    uniques.add(x);\r\n                }\r\n            });\r\n        });\r\n\r\n        return uniques;\r\n    }\r\n\r\n    skip(no: number) : IEnumerable<T> {\r\n        if (no > 0) {\r\n            return new List(this.list.slice(no, this.list.length - 1));\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    take(no: number) : IEnumerable<T> {\r\n        if (no > 0) {\r\n            return new List(this.list.slice(0, no));\r\n        }        \r\n\r\n        return this;\r\n    }\r\n\r\n    sum(predicate: (item: T)=> number) : number {\r\n        let sum: number = 0;\r\n        this.list.forEach(x => sum = sum + predicate(x));\r\n\r\n        return sum;\r\n    }\r\n\r\n    avg(predicate: (item: T)=> number) : number {        \r\n        return this.sum(predicate) / this.length;\r\n    }\r\n\r\n    min(predicate: (item: T)=> number) : number {\r\n        let min: number = 0;\r\n        let i = 0;\r\n        this.list.forEach(x => \r\n        {\r\n            if (i == 0) {\r\n                min = predicate(x);\r\n            }\r\n            else {\r\n                let val = predicate(x);\r\n                if (val < min) {\r\n                    min = val;\r\n                }\r\n            }            \r\n            i++;\r\n        });\r\n\r\n        return min;\r\n    }\r\n    \r\n    max(predicate: (item: T)=> number) : number {\r\n        let max: number = 0;\r\n        let i = 0;\r\n        this.list.forEach(x => \r\n        {\r\n            if (i == 0) {\r\n                max = predicate(x);\r\n            }\r\n            else {\r\n                let val = predicate(x);\r\n                if (val > max) {\r\n                    max = val;\r\n                }\r\n            }            \r\n            i++;\r\n        });\r\n\r\n        return max;\r\n    }    \r\n    \r\n    count(predicate: (item: T)=> boolean = null) : number {\r\n        if (!predicate) {\r\n            return this.length;\r\n        }\r\n\r\n        let count: number = 0;\r\n        this.list.forEach(x => {\r\n            if(predicate(x)) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n}","import { IEnumerable, IGroup } from './interfaces';\r\nimport { List } from './list';\r\n\r\nexport class Group<T> implements IGroup<T> {\r\n    groups: any[];\r\n    list: IEnumerable<T> = new List<T>();\r\n\r\n    constructor(groups: any[], list: Array<T>) {\r\n        this.groups = groups;\r\n        this.list = new List<T>(list);\r\n    }\r\n}\r\n\r\nexport var objCompare = function (obj1, obj2) {\r\n\t//Loop through properties in object 1\r\n\tfor (var p in obj1) {\r\n\t\t//Check property exists on both objects\r\n\t\tif (obj1.hasOwnProperty(p) !== obj2.hasOwnProperty(p)) return false;\r\n \r\n\t\tswitch (typeof (obj1[p])) {\r\n\t\t\t//Deep compare objects\r\n\t\t\tcase 'object':\r\n\t\t\t\tif (!objCompare(obj1[p], obj2[p])) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t//Compare function code\r\n\t\t\tcase 'function':\r\n\t\t\t\tif (typeof (obj2[p]) == 'undefined' || (p != 'compare' && obj1[p].toString() != obj2[p].toString())) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t//Compare values\r\n\t\t\tdefault:\r\n\t\t\t\tif (obj1[p] != obj2[p]) return false;\r\n\t\t}\r\n\t}\r\n \r\n\t//Check object 2 for any extra properties\r\n\tfor (var p in obj2) {\r\n\t\tif (typeof (obj1[p]) == 'undefined') return false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nexport const ITEM_NOT_FOUND_MSG: string = \"Item does not exist.\";\r\nexport const MULTIPLE_INSTANCES_FOUND_MSG: string = \"Multiple instances of entity found.\";","import { IEnumerable, IComparer, IEqualityComparer } from './interfaces';\r\nimport { List } from './list';\r\nimport { Group, objCompare, ITEM_NOT_FOUND_MSG, MULTIPLE_INSTANCES_FOUND_MSG } from './common';\r\n\r\nexport interface IDictionary<TKey, TValue> extends IEnumerable<KeyValuePair<TKey, TValue>> {\r\n    add(key: TKey, value: TValue) : void;\r\n    addRange(items: KeyValuePair<TKey, TValue>[]) : void;\r\n    remove(predicate: (item:KeyValuePair<TKey, TValue>) => boolean) : void;\r\n    clear() : void;\r\n\r\n    containsKey(key: TKey) : boolean;\r\n    containsValue(value: TValue) : boolean;\r\n    tryGetValue(key: TKey) : TValue;\r\n}\r\n\r\nexport class Dictionary<TKey, TValue> implements IDictionary<TKey, TValue>\r\n{\r\n    private list: Array<KeyValuePair<TKey, TValue>> = new Array<KeyValuePair<TKey, TValue>>();\r\n\r\n    constructor(list: Array<KeyValuePair<TKey, TValue>> = null) {\r\n        if (list) {\r\n            this.list = list;\r\n        }        \r\n    }\r\n\r\n    /* IList */\r\n\r\n    add(key: TKey, value: TValue) : void {\r\n        let pair = new KeyValuePair<TKey, TValue>(key, value);\r\n\r\n        if (this.containsKey(key)) {\r\n            throw \"Duplicate key. Cannot add.\"\r\n        }\r\n\r\n        this.list.push(pair);\r\n    }\r\n\r\n    addRange(items: KeyValuePair<TKey, TValue>[]) : void {\r\n        items.forEach(x => this.add(x.key, x.value));\r\n    }\r\n\r\n    clear() : void {\r\n        this.list = new Array<KeyValuePair<TKey, TValue>>();\r\n    }    \r\n\r\n    remove(predicate: (item:KeyValuePair<TKey, TValue>) => boolean) : void {\r\n        let temp = new Array<KeyValuePair<TKey, TValue>>();\r\n\r\n        this.list.forEach(element => {\r\n            if (!predicate(element))\r\n            {\r\n                temp.push(element);\r\n            }\r\n        });\r\n\r\n        this.list = temp;\r\n    }    \r\n\r\n    containsKey(key: TKey) : boolean {\r\n        return this.any(x => objCompare(x.key, key));\r\n    }\r\n\r\n    containsValue(value: TValue) : boolean {\r\n        return this.any(x => objCompare(x.value, value));\r\n    }\r\n\r\n    tryGetValue(key: TKey) : TValue {\r\n        let item = this.singleOrDefault(x => objCompare(x.key, key));\r\n\r\n        if (item) {\r\n            return item.value;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /* IEnumerable */\r\n\r\n    asEnumerable() : IEnumerable<KeyValuePair<TKey, TValue>> {\r\n        return this;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    elementAt(index: number) : KeyValuePair<TKey, TValue> {\r\n        try {\r\n            return this.list[index];\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }    \r\n\r\n    any(predicate?: (item: KeyValuePair<TKey, TValue>)=> boolean) : boolean {\r\n        if (!predicate) {\r\n            return this.list.length > 0;\r\n        }\r\n\r\n        for (let i=0; i<this.list.length; i++) {\r\n            if (predicate(this.list[i]))\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    all(predicate?: (item: KeyValuePair<TKey, TValue>)=> boolean) : boolean {\r\n        if (!predicate) {\r\n            return this.list.length > 0;\r\n        }\r\n        \r\n        for (let i=0; i<this.list.length; i++) {\r\n            if (!predicate(this.list[i]))\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    single(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean = null) : KeyValuePair<TKey, TValue> {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.singleOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n        \r\n        return this.list[0];\r\n    }\r\n\r\n    first(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean = null) : KeyValuePair<TKey, TValue> {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.firstOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n        \r\n        return this.list[0];\r\n    }\r\n    \r\n    last(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : KeyValuePair<TKey, TValue> {\r\n        if (this.list.length <= 0) {\r\n            throw ITEM_NOT_FOUND_MSG;\r\n        }\r\n\r\n        if (predicate) {\r\n            let item = this.lastOrDefault(predicate);\r\n\r\n            if (!item) {\r\n                throw ITEM_NOT_FOUND_MSG;\r\n            }\r\n\r\n            return item;\r\n        }\r\n\r\n        return this.list[this.list.length - 1];\r\n    }    \r\n\r\n    singleOrDefault(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : KeyValuePair<TKey, TValue> {\r\n        let temp = new Array<KeyValuePair<TKey, TValue>>();\r\n\r\n        this.list.filter(element => {\r\n            if (predicate(element))\r\n            {\r\n                temp.push(element);\r\n            }\r\n        });\r\n\r\n        if (temp.length > 1) {\r\n            throw MULTIPLE_INSTANCES_FOUND_MSG;\r\n        }\r\n\r\n        if (temp.length <= 0) {\r\n            return null;\r\n        }\r\n\r\n        return temp[0];\r\n    }    \r\n\r\n    firstOrDefault(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : KeyValuePair<TKey, TValue> {        \r\n        for (let i=0; i<this.length; i++) {\r\n            let item = this.list[i];\r\n            if (predicate(item))\r\n            {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    lastOrDefault(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : KeyValuePair<TKey, TValue> {\r\n        for (let i=this.length; i>=0; i--) {\r\n            let item = this.list[i - 1];\r\n            if (predicate(item))\r\n            {\r\n                return item;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }    \r\n\r\n    where(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean) : IDictionary<TKey, TValue> {\r\n        let temp = new Dictionary<TKey, TValue>();\r\n\r\n        this.list.filter(element => {\r\n            if (predicate(element))\r\n            {\r\n                temp.add(element.key, element.value);\r\n            }\r\n        });\r\n\r\n        return temp;\r\n    }\r\n\r\n    select<TResult>(predicate: (item: KeyValuePair<TKey, TValue>)=> TResult) : IEnumerable<TResult> {\r\n        let temp = new List<TResult>();\r\n\r\n        this.forEach(x => temp.add(predicate(x)));\r\n\r\n        return temp;\r\n    }\r\n\r\n    forEach(predicate: (item: KeyValuePair<TKey, TValue>)=> void) : void {\r\n        this.list.forEach(x => predicate(x));\r\n    }\r\n\r\n    toArray() : Array<KeyValuePair<TKey, TValue>> {\r\n        return this.list;\r\n    }\r\n\r\n    join<TOuter, TMatch, TResult>(outer: IEnumerable<TOuter>, conditionInner: (item: KeyValuePair<TKey, TValue>)=> TMatch, \r\n                                    conditionOuter: (item: TOuter)=> TMatch, select: (x: KeyValuePair<TKey, TValue>, y:TOuter)=> TResult, leftJoin: boolean = false) : IEnumerable<TResult> {\r\n        let resultList = new List<TResult>();\r\n\r\n        this.list.forEach(x => {\r\n            let outerEntries = outer.toArray().filter(y => conditionInner(x) === conditionOuter(y));\r\n\r\n            if (leftJoin && outerEntries && outerEntries.length <= 0) {\r\n                resultList.add(select(x, null));\r\n            }\r\n            else {\r\n                outerEntries.forEach(z => resultList.add(select(x, z)));\r\n            }\r\n        })\r\n\r\n        return resultList;\r\n    }\r\n\r\n    groupBy(predicate: (item: KeyValuePair<TKey, TValue>) => Array<any>) : IEnumerable<Group<KeyValuePair<TKey, TValue>>> {\r\n        let groups = {};\r\n        this.list.forEach(function (o) {\r\n          var group = JSON.stringify(predicate(o));\r\n          groups[group] = groups[group] || [];\r\n          groups[group].push(o);\r\n        });\r\n        let g = Object.keys(groups).map(function (group) {                \r\n            let a = group.substr(1, group.length - 2);\r\n\r\n            let grp= new Group<KeyValuePair<TKey, TValue>>(a.split(','), groups[group]);\r\n\r\n            return grp;\r\n        });\r\n\r\n        return new List<Group<KeyValuePair<TKey, TValue>>>(g);        \r\n    }\r\n\r\n    orderBy(comparer: IComparer<KeyValuePair<TKey, TValue>>) : IEnumerable<KeyValuePair<TKey, TValue>> {\r\n        let temp = this.list.sort((x,y) => comparer.compare(x, y));\r\n\r\n        return new List<KeyValuePair<TKey, TValue>>(temp);\r\n    }\r\n\r\n    distinct(comparer: IEqualityComparer<KeyValuePair<TKey, TValue>>) : IEnumerable<KeyValuePair<TKey, TValue>> {\r\n        let uniques = new List<KeyValuePair<TKey, TValue>>();\r\n        this.forEach(x => {\r\n            uniques.forEach(y => {\r\n                if (!comparer.equals(x, y)) {\r\n                    uniques.add(x);\r\n                }\r\n            });\r\n        });\r\n\r\n        return uniques;\r\n    }\r\n\r\n    union(list: IEnumerable<KeyValuePair<TKey, TValue>>) : IDictionary<TKey, TValue> {\r\n         this.addRange(list.toArray());\r\n\r\n         return this;\r\n    }    \r\n\r\n    skip(no: number) : IDictionary<TKey, TValue> {\r\n        if (no > 0) {\r\n            return new Dictionary(this.list.slice(no, this.list.length - 1));\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    take(no: number) : IDictionary<TKey, TValue> {\r\n        if (no > 0) {\r\n            return new Dictionary(this.list.slice(0, no));\r\n        }        \r\n\r\n        return this;\r\n    }    \r\n\r\n    sum(predicate: (item: KeyValuePair<TKey, TValue>)=> number) : number {\r\n        let sum: number = 0;\r\n        this.list.forEach(x => sum = sum + predicate(x));\r\n\r\n        return sum;\r\n    }\r\n\r\n    avg(predicate: (item: KeyValuePair<TKey, TValue>)=> number) : number {        \r\n        return this.sum(predicate) / this.length;\r\n    }\r\n\r\n    min(predicate: (item: KeyValuePair<TKey, TValue>)=> number) : number {\r\n        let min: number = 0;\r\n        let i = 0;\r\n        this.list.forEach(x => \r\n        {\r\n            if (i == 0) {\r\n                min = predicate(x);\r\n            }\r\n            else {\r\n                let val = predicate(x);\r\n                if (val < min) {\r\n                    min = val;\r\n                }\r\n            }            \r\n            i++;\r\n        });\r\n\r\n        return min;\r\n    }\r\n    \r\n    max(predicate: (item: KeyValuePair<TKey, TValue>)=> number) : number {\r\n        let max: number = 0;\r\n        let i = 0;\r\n        this.list.forEach(x => \r\n        {\r\n            if (i == 0) {\r\n                max = predicate(x);\r\n            }\r\n            else {\r\n                let val = predicate(x);\r\n                if (val > max) {\r\n                    max = val;\r\n                }\r\n            }            \r\n            i++;\r\n        });\r\n\r\n        return max;\r\n    }\r\n\r\n    count(predicate: (item: KeyValuePair<TKey, TValue>)=> boolean = null) : number {\r\n        if (!predicate) {\r\n            return this.length;\r\n        }\r\n\r\n        let count: number = 0;\r\n        this.list.forEach(x => {\r\n            if(predicate(x)) {\r\n                count++;\r\n            }\r\n        });\r\n\r\n        return count;\r\n    }    \r\n}\r\n\r\nexport class KeyValuePair<TKey, TValue> {\r\n    key: TKey;\r\n    value: TValue;\r\n\r\n    constructor(key: TKey, value: TValue) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n}"],"names":[],"mappings":"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"}
