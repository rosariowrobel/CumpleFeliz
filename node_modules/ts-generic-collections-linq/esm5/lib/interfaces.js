/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 * @template T
 */
export function IEnumerable() { }
if (false) {
    /** @type {?} */
    IEnumerable.prototype.length;
    /**
     * @param {?} index
     * @return {?}
     */
    IEnumerable.prototype.elementAt = function (index) { };
    /**
     * @param {?=} predicate
     * @return {?}
     */
    IEnumerable.prototype.any = function (predicate) { };
    /**
     * @param {?=} predicate
     * @return {?}
     */
    IEnumerable.prototype.all = function (predicate) { };
    /**
     * @param {?=} predicate
     * @return {?}
     */
    IEnumerable.prototype.single = function (predicate) { };
    /**
     * @param {?=} predicate
     * @return {?}
     */
    IEnumerable.prototype.first = function (predicate) { };
    /**
     * @param {?=} predicate
     * @return {?}
     */
    IEnumerable.prototype.last = function (predicate) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.singleOrDefault = function (predicate) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.firstOrDefault = function (predicate) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.lastOrDefault = function (predicate) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.where = function (predicate) { };
    /**
     * @template TResult
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.select = function (predicate) { };
    /**
     * @template TOuter, TMatch, TResult
     * @param {?} outer
     * @param {?} conditionInner
     * @param {?} conditionOuter
     * @param {?} select
     * @param {?=} leftJoin
     * @return {?}
     */
    IEnumerable.prototype.join = function (outer, conditionInner, conditionOuter, select, leftJoin) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.groupBy = function (predicate) { };
    /**
     * @param {?} comparer
     * @return {?}
     */
    IEnumerable.prototype.orderBy = function (comparer) { };
    /**
     * @param {?} comparer
     * @return {?}
     */
    IEnumerable.prototype.distinct = function (comparer) { };
    /**
     * @param {?} list
     * @return {?}
     */
    IEnumerable.prototype.union = function (list) { };
    /**
     * @param {?} no
     * @return {?}
     */
    IEnumerable.prototype.skip = function (no) { };
    /**
     * @param {?} no
     * @return {?}
     */
    IEnumerable.prototype.take = function (no) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.sum = function (predicate) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.avg = function (predicate) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.min = function (predicate) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.max = function (predicate) { };
    /**
     * @param {?=} predicate
     * @return {?}
     */
    IEnumerable.prototype.count = function (predicate) { };
    /**
     * @param {?} predicate
     * @return {?}
     */
    IEnumerable.prototype.forEach = function (predicate) { };
    /**
     * @return {?}
     */
    IEnumerable.prototype.toArray = function () { };
    /**
     * @return {?}
     */
    IEnumerable.prototype.asEnumerable = function () { };
}
/**
 * @record
 * @template T
 */
export function IGroup() { }
if (false) {
    /** @type {?} */
    IGroup.prototype.groups;
    /** @type {?} */
    IGroup.prototype.list;
}
/**
 * @record
 * @template T
 */
export function IComparer() { }
if (false) {
    /**
     * @param {?} x
     * @param {?} y
     * @return {?}
     */
    IComparer.prototype.compare = function (x, y) { };
}
/**
 * @record
 * @template T
 */
export function IEqualityComparer() { }
if (false) {
    /**
     * @param {?} x
     * @param {?} y
     * @return {?}
     */
    IEqualityComparer.prototype.equals = function (x, y) { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3RzLWdlbmVyaWMtY29sbGVjdGlvbnMtbGlucS8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmZhY2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsaUNBNkJDOzs7SUFIRyw2QkFBZTs7Ozs7SUF6QmYsdURBQTZCOzs7OztJQUM3QixxREFBK0M7Ozs7O0lBQy9DLHFEQUErQzs7Ozs7SUFDL0Msd0RBQTRDOzs7OztJQUM1Qyx1REFBMkM7Ozs7O0lBQzNDLHNEQUEwQzs7Ozs7SUFDMUMsaUVBQW9EOzs7OztJQUNwRCxnRUFBbUQ7Ozs7O0lBQ25ELCtEQUFrRDs7Ozs7SUFDbEQsdURBQXVEOzs7Ozs7SUFDdkQsd0RBQXVFOzs7Ozs7Ozs7O0lBQ3ZFLG9HQUN3Sjs7Ozs7SUFDeEoseURBQXFFOzs7OztJQUNyRSx3REFBaUQ7Ozs7O0lBQ2pELHlEQUEwRDs7Ozs7SUFDMUQsa0RBQTZDOzs7OztJQUM3QywrQ0FBa0M7Ozs7O0lBQ2xDLCtDQUFrQzs7Ozs7SUFDbEMscURBQTRDOzs7OztJQUM1QyxxREFBNEM7Ozs7O0lBQzVDLHFEQUE0Qzs7Ozs7SUFDNUMscURBQTRDOzs7OztJQUM1Qyx1REFBZ0Q7Ozs7O0lBQ2hELHlEQUE0Qzs7OztJQUU1QyxnREFBcUI7Ozs7SUFDckIscURBQWdDOzs7Ozs7QUFHcEMsNEJBR0M7OztJQUZHLHdCQUFjOztJQUNkLHNCQUFxQjs7Ozs7O0FBR3pCLCtCQUVDOzs7Ozs7O0lBREcsa0RBQTRCOzs7Ozs7QUFHaEMsdUNBRUM7Ozs7Ozs7SUFERyx5REFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIElFbnVtZXJhYmxlPFQ+IHtcclxuICAgIGVsZW1lbnRBdChpbmRleDogbnVtYmVyKSA6IFQ7XHJcbiAgICBhbnkocHJlZGljYXRlPzogKGl0ZW06IFQpPT4gYm9vbGVhbikgOiBib29sZWFuO1xyXG4gICAgYWxsKHByZWRpY2F0ZT86IChpdGVtOiBUKT0+IGJvb2xlYW4pIDogYm9vbGVhbjtcclxuICAgIHNpbmdsZShwcmVkaWNhdGU/OiAoaXRlbTogVCk9PiBib29sZWFuKSA6IFQ7XHJcbiAgICBmaXJzdChwcmVkaWNhdGU/OiAoaXRlbTogVCk9PiBib29sZWFuKSA6IFQ7XHJcbiAgICBsYXN0KHByZWRpY2F0ZT86IChpdGVtOiBUKT0+IGJvb2xlYW4pIDogVDtcclxuICAgIHNpbmdsZU9yRGVmYXVsdChwcmVkaWNhdGU6IChpdGVtOiBUKT0+IGJvb2xlYW4pIDogVDsgICAgXHJcbiAgICBmaXJzdE9yRGVmYXVsdChwcmVkaWNhdGU6IChpdGVtOiBUKT0+IGJvb2xlYW4pIDogVDtcclxuICAgIGxhc3RPckRlZmF1bHQocHJlZGljYXRlOiAoaXRlbTogVCk9PiBib29sZWFuKSA6IFQ7XHJcbiAgICB3aGVyZShwcmVkaWNhdGU6IChpdGVtOiBUKT0+IGJvb2xlYW4pIDogSUVudW1lcmFibGU8VD47XHJcbiAgICBzZWxlY3Q8VFJlc3VsdD4ocHJlZGljYXRlOiAoaXRlbTogVCk9PiBUUmVzdWx0KSA6IElFbnVtZXJhYmxlPFRSZXN1bHQ+O1xyXG4gICAgam9pbjxUT3V0ZXIsIFRNYXRjaCwgVFJlc3VsdD4ob3V0ZXI6IElFbnVtZXJhYmxlPFRPdXRlcj4sIGNvbmRpdGlvbklubmVyOiAoaXRlbTogVCk9PiBUTWF0Y2gsIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25kaXRpb25PdXRlcjogKGl0ZW06IFRPdXRlcik9PiBUTWF0Y2gsIHNlbGVjdDogKHg6IFQsIHk6VE91dGVyKT0+IFRSZXN1bHQsIGxlZnRKb2luPzogYm9vbGVhbikgOiBJRW51bWVyYWJsZTxUUmVzdWx0PjsgXHJcbiAgICBncm91cEJ5KHByZWRpY2F0ZTogKGl0ZW06IFQpID0+IEFycmF5PGFueT4pIDogSUVudW1lcmFibGU8SUdyb3VwPFQ+PjtcclxuICAgIG9yZGVyQnkoY29tcGFyZXI6IElDb21wYXJlcjxUPikgOiBJRW51bWVyYWJsZTxUPjtcclxuICAgIGRpc3RpbmN0KGNvbXBhcmVyOiBJRXF1YWxpdHlDb21wYXJlcjxUPikgOiBJRW51bWVyYWJsZTxUPjtcclxuICAgIHVuaW9uKGxpc3Q6IElFbnVtZXJhYmxlPFQ+KSA6IElFbnVtZXJhYmxlPFQ+O1xyXG4gICAgc2tpcChubzogbnVtYmVyKSA6IElFbnVtZXJhYmxlPFQ+O1xyXG4gICAgdGFrZShubzogbnVtYmVyKSA6IElFbnVtZXJhYmxlPFQ+O1xyXG4gICAgc3VtKHByZWRpY2F0ZTogKGl0ZW06IFQpPT4gbnVtYmVyKSA6IG51bWJlcjtcclxuICAgIGF2ZyhwcmVkaWNhdGU6IChpdGVtOiBUKT0+IG51bWJlcikgOiBudW1iZXI7XHJcbiAgICBtaW4ocHJlZGljYXRlOiAoaXRlbTogVCk9PiBudW1iZXIpIDogbnVtYmVyO1xyXG4gICAgbWF4KHByZWRpY2F0ZTogKGl0ZW06IFQpPT4gbnVtYmVyKSA6IG51bWJlcjtcclxuICAgIGNvdW50KHByZWRpY2F0ZT86IChpdGVtOiBUKT0+IGJvb2xlYW4pIDogbnVtYmVyO1xyXG4gICAgZm9yRWFjaChwcmVkaWNhdGU6IChpdGVtOiBUKT0+IHZvaWQpIDogdm9pZDtcclxuICAgIGxlbmd0aDogbnVtYmVyO1xyXG4gICAgdG9BcnJheSgpIDogQXJyYXk8VD47XHJcbiAgICBhc0VudW1lcmFibGUoKSA6IElFbnVtZXJhYmxlPFQ+O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElHcm91cDxUPiB7XHJcbiAgICBncm91cHM6IGFueVtdO1xyXG4gICAgbGlzdDogSUVudW1lcmFibGU8VD47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUNvbXBhcmVyPFQ+IHtcclxuICAgIGNvbXBhcmUoeDpULCB5OiBUKSA6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJRXF1YWxpdHlDb21wYXJlcjxUPiB7XHJcbiAgICBlcXVhbHMoeDpULCB5OiBUKSA6IGJvb2xlYW47XHJcbn0iXX0=